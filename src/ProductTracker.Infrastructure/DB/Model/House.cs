// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	/// <summary>
	/// Дом (локация)
	/// </summary>
	[Table("house")]
	public class House
	{
		/// <summary>
		/// Уникальный идентификатор
		/// </summary>
		[Column("id"          , IsPrimaryKey = true , IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public long    Id          { get; set; } // bigint
		/// <summary>
		/// Краткое описание локации
		/// </summary>
		[Column("short_name"  , CanBeNull    = false                                                             )] public string  ShortName   { get; set; } = null!; // character varying(100)
		/// <summary>
		/// Полный адрес
		/// </summary>
		[Column("full_address"                                                                                   )] public string? FullAddress { get; set; } // text

		#region Associations
		/// <summary>
		/// house_purchase_id_fkey backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Purchase.HouseId))]
		public IEnumerable<Purchase> Purchases { get; set; } = null!;

		/// <summary>
		/// house_xref_id_fkey backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(HouseXrefUser.HouseId))]
		public IEnumerable<HouseXrefUser> HouseXrefUsers { get; set; } = null!;
		#endregion
	}
}

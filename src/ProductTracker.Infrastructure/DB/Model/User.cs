// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	/// <summary>
	/// Пользователь
	/// </summary>
	[Table("user")]
	public class User
	{
		/// <summary>
		/// Уникальный идентификатор
		/// </summary>
		[Column("id"        , IsPrimaryKey = true , IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public long     Id        { get; set; } // bigint
		/// <summary>
		/// Имя
		/// </summary>
		[Column("first_name", CanBeNull    = false                                                             )] public string   FirstName { get; set; } = null!; // character varying(75)
		/// <summary>
		/// Фамилия
		/// </summary>
		[Column("last_name" , CanBeNull    = false                                                             )] public string   LastName  { get; set; } = null!; // character varying(75)
		/// <summary>
		/// Дата рождения
		/// </summary>
		[Column("birth_day"                                                                                    )] public DateTime BirthDay  { get; set; } // timestamp (6) without time zone
		/// <summary>
		/// Логин пользователя
		/// </summary>
		[Column("login"     , CanBeNull    = false                                                             )] public string   Login     { get; set; } = null!; // character varying(50)
		/// <summary>
		/// Пароль пользователя
		/// </summary>
		[Column("password"  , CanBeNull    = false                                                             )] public string   Password  { get; set; } = null!; // character varying(300)

		#region Associations
		/// <summary>
		/// user_id_fkey backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(HouseXrefUser.UserId))]
		public IEnumerable<HouseXrefUser> HouseXrefUsers { get; set; } = null!;

		/// <summary>
		/// user_refresh_id_fkey backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(UserXrefRefreshToken.UserId))]
		public IEnumerable<UserXrefRefreshToken> UserXrefRefreshTokens { get; set; } = null!;
		#endregion
	}
}
